"""
main.py
--------
Point d‚Äôentr√©e principal du programme "Index-Rectangle Inverter".

Ce fichier :
- Configure l‚Äôenvironnement Python pour pouvoir importer les modules internes.
- Cr√©e la configuration de l‚Äôapplication (`Config`).
- Instancie et ex√©cute l‚Äôapplication principale (`InverterApp`).

Objectif du projet :
--------------------
Ce projet permet d‚Äôinverser les couleurs d‚Äôune zone rectangulaire de la webcam,
d√©finie par les positions de vos deux index, d√©tect√©s gr√¢ce √† MediaPipe.
Le tout s‚Äôaffiche en temps r√©el avec OpenCV.

Organisation du code :
----------------------
üìÅ src/inverter/
   ‚îú‚îÄ‚îÄ app.py                 ‚Üí logique principale de l‚Äôapplication
   ‚îú‚îÄ‚îÄ config.py              ‚Üí configuration et param√®tres
   ‚îú‚îÄ‚îÄ geometry.py            ‚Üí d√©finitions g√©om√©triques (points, rectangles)
   ‚îú‚îÄ‚îÄ smoothing.py           ‚Üí lisseur EMA (stabilisation)
   ‚îú‚îÄ‚îÄ hand_tracking.py       ‚Üí d√©tection des index via MediaPipe
   ‚îú‚îÄ‚îÄ rectangle_controller.py ‚Üí gestion et lissage du rectangle ROI
   ‚îú‚îÄ‚îÄ overlay.py             ‚Üí affichage graphique (points, HUD, FPS)
   ‚îî‚îÄ‚îÄ effects.py             ‚Üí effets visuels (inversion de couleurs)
"""

import sys
from pathlib import Path

# ---------------------------------------------------------------------------
# 1Ô∏è‚É£  Ajustement du chemin d'import
# ---------------------------------------------------------------------------
# Quand on ex√©cute ce script directement, Python ne conna√Æt pas forc√©ment le
# dossier "src" comme module. On doit donc l'ajouter manuellement au chemin
# de recherche des modules (sys.path).
#
# Exemple :
#   sys.path contient les dossiers o√π Python cherche les imports.
#   Ici, on ajoute le dossier "src" pour pouvoir faire :
#       from inverter.app import InverterApp
#   sans erreur "ModuleNotFoundError".
#
# ‚ö†Ô∏è Cette ligne ne modifie rien au code m√©tier, elle sert seulement √†
# permettre les imports locaux lorsque le projet est lanc√© depuis la racine.
# ---------------------------------------------------------------------------
sys.path.append(str(Path(__file__).resolve().parent / "src"))

# ---------------------------------------------------------------------------
# 2Ô∏è‚É£  Import des composants principaux
# ---------------------------------------------------------------------------
# On importe les deux briques centrales :
# - Config      : contient tous les param√®tres de l‚Äôapplication.
# - InverterApp : classe principale qui orchestre tout le fonctionnement
#                 (cam√©ra, d√©tection, affichage, effets‚Ä¶).
# ---------------------------------------------------------------------------
from inverter.app import InverterApp
from inverter.config import Config


# ---------------------------------------------------------------------------
# 3Ô∏è‚É£  Fonction main()
# ---------------------------------------------------------------------------
def main() -> None:
    """
    Point d‚Äôentr√©e principal de l‚Äôapplication.

    √âtapes :
    --------
    1. Cr√©ation de la configuration (`Config`).
       - D√©finit les param√®tres de la cam√©ra, du suivi, de l‚Äôaffichage‚Ä¶
       - Peut √™tre modifi√©e par l‚Äôutilisateur avant le lancement.

    2. Instanciation de l‚Äôapplication (`InverterApp`).
       - Pr√©pare la capture vid√©o.
       - Initialise MediaPipe pour la d√©tection des mains.
       - Cr√©e la fen√™tre OpenCV.

    3. Lancement de la boucle principale (`app.run()`).
       - Lit les images de la webcam.
       - D√©tecte les index.
       - Calcule le rectangle ROI.
       - Applique l‚Äôeffet d‚Äôinversion de couleurs.
       - Dessine les overlays (points, rectangle, HUD, FPS).
       - Met √† jour la fen√™tre jusqu‚Äô√† ce que l‚Äôutilisateur quitte (Q ou X).

    En r√©sum√© :
    -----------
        Config  ‚Üí  InverterApp  ‚Üí  .run()

    Sortie :
    --------
    - L‚Äôapplication ouvre une fen√™tre interactive.
    - Affiche le flux de la webcam avec un rectangle qui inverse les couleurs
      entre vos deux index.

    Raccourcis clavier :
    --------------------
    [Q] ‚Üí Quitter l‚Äôapplication proprement.
    [R] ‚Üí R√©initialiser le rectangle et les filtres de lissage.
    """
    # √âtape 1 : cr√©ation de la configuration
    cfg = Config()

    # √âtape 2 : cr√©ation de l‚Äôapplication principale
    app = InverterApp(cfg)

    # √âtape 3 : lancement de la boucle principale
    app.run()


# ---------------------------------------------------------------------------
# 4Ô∏è‚É£  Point d‚Äôentr√©e conditionnel
# ---------------------------------------------------------------------------
# Cette condition sp√©ciale `if __name__ == "__main__":` indique √† Python :
# - "Ex√©cute la fonction main() uniquement si ce fichier est lanc√© directement."
# - Si ce fichier est import√© comme module dans un autre script, `main()` NE
#   sera pas appel√© automatiquement.
#
# C‚Äôest une bonne pratique universelle en Python pour s√©parer :
# - le **code ex√©cutable** (main)
# - du **code importable** (modules)
# ---------------------------------------------------------------------------
if __name__ == "__main__":
    main()
